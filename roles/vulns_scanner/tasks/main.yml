- name: Ensure directories exist
  ignore_errors: yes
  become: yes
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "/opt/tools/vulns_scanner"
    - "/opt/tools/vulns_scanner/xray"
    - "/opt/tools/vulns_scanner/xray/xray-config"
    - "/opt/tools/vulns_scanner/jaeles"
    - "/opt/tools/vulns_scanner/nuclei"
    - "/root/templates"

- name: Install Afrog
  ignore_errors: yes
  become: yes
  command: "/usr/local/go/bin/go install github.com/zan8in/afrog/v2/cmd/afrog@latest"
  environment:
    GOPATH: "{{ ansible_env.HOME }}/go"
    GOROOT: "/usr/local/go"
    PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin:{{ ansible_env.HOME }}/go/bin"

- name: Copy binaries to /usr/local/bin
  ignore_errors: yes
  become: yes
  copy:
    src: "{{ item.src }}"
    dest: "/usr/local/bin/{{ item.dest }}"
    mode: "0755"
  with_items:
    - { src: "{{ ansible_env.HOME }}/go/bin/afrog", dest: "afrog" }
    - { src: "/opt/tools/vulns_scanner/xray/xray", dest: "xray" }
    - { src: "/opt/tools/vulns_scanner/jaeles/jaelse", dest: "jaelse" }
    - { src: "/opt/tools/vulns_scanner/nuclei/nuclei", dest: "nuclei" }
    - { src: "{{ ansible_env.HOME }}/go/bin/cent", dest: "cent" }

- name: Install POC-bomber and requirements
  ignore_errors: yes
  become: yes
  vars:
    dest_dir: "/opt/tools/vulns_scanner"
  tasks:
    - name: Clone POC-bomber and install requirements
      git:
        repo: 'https://github.com/tr0uble-mAker/POC-bomber.git'
        dest: "{{ dest_dir }}/POC-bomber"

    - name: Install requirements for POC-bomber
      pip:
        requirements: "{{ dest_dir }}/POC-bomber/requirements.txt"
        executable: pip3
        state: present
        extra_args: --ignore-installed --no-warn-script-location

- name: Install and configure Xray
  ignore_errors: yes
  become: yes
  tasks:
    - name: Fetch latest Xray release
      uri:
        url: "https://api.github.com/repos/chaitin/xray/releases/latest"
        return_content: yes
      register: xray_release

    - name: Download Xray
      get_url:
        url: "{{ xray_release.json.assets[0].browser_download_url }}"
        dest: "/tmp/xray.zip"

    - name: Extract Xray
      unarchive:
        src: "/tmp/xray.zip"
        dest: "/opt/tools/vulns_scanner/xray"
        remote_src: yes

    - name: Fetch latest Xray config release
      uri:
        url: "https://api.github.com/repos/mrco24/xray-config/releases/latest"
        return_content: yes
      register: xray_config_release

    - name: Download Xray config
      get_url:
        url: "{{ xray_config_release.json.assets[0].browser_download_url }}"
        dest: "/tmp/xray-config.zip"

    - name: Extract Xray config
      unarchive:
        src: "/tmp/xray-config.zip"
        dest: "/opt/tools/vulns_scanner/xray/xray-config"
        remote_src: yes

    - name: Move and rename Xray binaries and configs
      shell: |
        cd /opt/tools/vulns_scanner/xray/xray-config
        cp -r *.yaml ..
        cd ..
        mv xray_linux_amd64 xray

- name: Install Jaeles and templates
  ignore_errors: yes
  become: yes
  tasks:
    - name: Fetch latest Jaeles release
      uri:
        url: "https://api.github.com/repos/jaeles-project/jaeles/releases/latest"
        return_content: yes
      register: jaeles_release

    - name: Download Jaeles
      get_url:
        url: "{{ jaeles_release.json.assets[0].browser_download_url }}"
        dest: "/tmp/jaeles.zip"

    - name: Extract Jaeles
      unarchive:
        src: "/tmp/jaeles.zip"
        dest: "/opt/tools/vulns_scanner/jaeles"
        remote_src: yes

    - name: Install jaeles-signatures
      git:
        repo: 'https://github.com/jaeles-project/jaeles-signatures.git'
        dest: "/root/templates/jaeles-signatures"

    - name: Install ghsec-jaeles-signatures
      git:
        repo: 'https://github.com/ghsec/ghsec-jaeles-signatures.git'
        dest: "/root/templates/ghsec-jaeles-signatures"

- name: Install Nuclei and templates
  ignore_errors: yes
  become: yes
  tasks:
    - name: Fetch latest Nuclei release
      uri:
        url: "https://api.github.com/repos/projectdiscovery/nuclei/releases/latest"
        return_content: yes
      register: nuclei_release

    - name: Download Nuclei
      get_url:
        url: "{{ nuclei_release.json.assets[0].browser_download_url }}"
        dest: "/tmp/nuclei.zip"

    - name: Extract Nuclei
      unarchive:
        src: "/tmp/nuclei.zip"
        dest: "/opt/tools/vulns_scanner/nuclei"
        remote_src: yes

    - name: Install nuclei-templates
      git:
        repo: 'https://github.com/projectdiscovery/nuclei-templates.git'
        dest: "/root/templates/nuclei-templates"

- name: Install Cent
  ignore_errors: yes
  become: yes
  command: "/usr/local/go/bin/go install -v github.com/xm1k3/cent@latest"
  environment:
    GOPATH: "{{ ansible_env.HOME }}/go"
    GOROOT: "/usr/local/go"
    PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin:{{ ansible_env.HOME }}/go/bin"

- name: Cent init
  ignore_errors: yes
  become: yes
  shell: "cent init"
