- name: Install Sublist3r using git
  git:
    repo: 'https://github.com/aboul3la/Sublist3r.git'
    dest: /opt/tools/subdomain_enum/Sublist3r
  become: yes

- name: Download Golang
  become: yes
  get_url:
    url: "https://go.dev/dl/go1.22.2.linux-amd64.tar.gz"
    dest: "/tmp/go1.22.2.linux-amd64.tar.gz"

- name: Extract Golang
  become: yes
  unarchive:
    src: "/tmp/go1.22.2.linux-amd64.tar.gz"
    dest: "/usr/local/"
    remote_src: yes

- name: Set GOROOT environment variable
  lineinfile:
    path: /etc/profile
    line: 'export GOROOT=/usr/local/go'
    create: yes
  become: yes

- name: Set GOPATH environment variable
  lineinfile:
    path: /etc/profile
    line: 'export GOPATH=$HOME/go'
    create: yes
  become: yes

- name: Set PATH environment variable for Go
  lineinfile:
    path: /etc/profile
    line: 'export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin'
    create: yes
  become: yes

- name: Ensure Go binary directory exists
  file:
    path: "{{ ansible_env.HOME }}/go/bin"
    state: directory
    mode: '0755'
  become: yes

# - name: Install aquatone
#   command: "/usr/local/go/bin/go install github.com/michenriksen/aquatone@v1.7.0"
#   environment:
#     GOPATH: "{{ ansible_env.HOME }}/go"
#     GOROOT: "/usr/local/go"
#     PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin:{{ ansible_env.HOME }}/go/bin"
#   become: yes

- name: Install assetfinder
  command: "/usr/local/go/bin/go install github.com/tomnomnom/assetfinder@latest"
  environment:
    GOPATH: "{{ ansible_env.HOME }}/go"
    GOROOT: "/usr/local/go"
    PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin:{{ ansible_env.HOME }}/go/bin"
  become: yes

- name: Install amass
  apt:
    name: amass
    state: present
  become: yes

- name: Install Subfinder
  command: "/usr/local/go/bin/go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest"
  environment:
    GOPATH: "{{ ansible_env.HOME }}/go"
    GOROOT: "/usr/local/go"
    PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin:{{ ansible_env.HOME }}/go/bin"
  become: yes

- name: Copy Subfinder binary to /usr/local/bin
  become: yes
  copy:
    src: "{{ ansible_env.HOME }}/go/bin/subfinder"
    dest: "/usr/local/bin/subfinder"
    mode: "0755"

- name: Download Findomain ZIP file
  get_url:
    url: "https://github.com/findomain/findomain/releases/latest/download/findomain-linux-i386.zip"
    dest: "/tmp/findomain-linux-i386.zip"
  register: download_findomain
  become: yes

- name: Extract Findomain ZIP file
  unarchive:
    src: "/tmp/findomain-linux-i386.zip"
    dest: "/usr/bin/"
    remote_src: yes
  register: extract_findomain
  become: yes
  ignore_errors: yes

- name: Make Findomain executable
  file:
    path: "/usr/bin/findomain"
    mode: "u+x"
  become: yes

- name: Install Github-subdomains
  command: "/usr/local/go/bin/go install github.com/gwen001/github-subdomains@latest"
  environment:
    GOPATH: "{{ ansible_env.HOME }}/go"
    GOROOT: "/usr/local/go"
    PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin:{{ ansible_env.HOME }}/go/bin"
  become: yes

- name: Copy Github-subdomains binary to /usr/local/bin
  become: yes
  copy:
    src: "{{ ansible_env.HOME }}/go/bin/github-subdomains"
    dest: "/usr/local/bin/github-subdomains"
    mode: "0755"

- name: Install Crobat
  command: "/usr/local/go/bin/go install github.com/cgboal/sonarsearch/cmd/crobat@latest"
  environment:
    GOPATH: "{{ ansible_env.HOME }}/go"
    GOROOT: "/usr/local/go"
    PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin:{{ ansible_env.HOME }}/go/bin"
  become: yes

- name: Copy Crobat binary to /usr/local/bin
  become: yes
  copy:
    src: "{{ ansible_env.HOME }}/go/bin/crobat"
    dest: "/usr/local/bin/crobat"
    mode: "0755"

- name: Install Sudomy using git
  git:
    repo: 'https://github.com/screetsec/Sudomy.git'
    dest: /opt/tools/subdomain_enum/Sudomy
  become: yes

- name: Create virtual environment for Sudomy
  command: python3 -m venv /opt/tools/subdomain_enum/Sudomy/venv
  become: yes

- name: Install requirements for Sudomy in virtual environment
  pip:
    requirements: /opt/tools/subdomain_enum/Sudomy/requirements.txt
    virtualenv: /opt/tools/subdomain_enum/Sudomy/venv
  become: yes

- name: Install required packages for Sudomy
  apt:
    name:
      - npm
      - jq
      - nmap
      - chromium
      - parallel
    state: present
  become: yes

- name: Install global npm packages for Sudomy
  shell: "npm i -g wappalyzer wscat"
  become: yes


- name: Install Sudomy Packages
  become: yes
  shell: |
    cp /opt/tools/subdomain_enum/Sudomy/sudomy /usr/local/bin || true
    cp /opt/tools/subdomain_enum/Sudomy/sudomy.api.dist /usr/local/bin || true
    cp /opt/tools/subdomain_enum/Sudomy/slack.conf /usr/local/bin || true
    cp /opt/tools/subdomain_enum/Sudomy/sudomy.conf /usr/local/bin || true
  ignore_errors: yes


- name: Copy Sudomy binary to /usr/local/bin
  become: yes
  copy:
    src: "/opt/tools/subdomain_enum/Sudomy/sudomy"
    dest: "/usr/local/bin/sudomy"
    mode: "0755"

- name: Install Mapcidr
  command: "/usr/local/go/bin/go install -v github.com/projectdiscovery/mapcidr/cmd/mapcidr@latest"
  environment:
    GOPATH: "{{ ansible_env.HOME }}/go"
    GOROOT: "/usr/local/go"
    PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin:{{ ansible_env.HOME }}/go/bin"
  become: yes

- name: Copy Mapcidr binary to /usr/local/bin
  become: yes
  copy:
    src: "{{ ansible_env.HOME }}/go/bin/mapcidr"
    dest: "/usr/local/bin/mapcidr"
    mode: "0755"

- name: Install CertCrunchy
  git:
    repo: 'https://github.com/joda32/CertCrunchy.git'
    dest: /opt/tools/subdomain_enum/CertCrunchy
  become: yes

- name: Create virtual environment for CertCrunchy
  command: python3 -m venv /opt/tools/subdomain_enum/CertCrunchy/venv
  become: yes

- name: Install requirements for CertCrunchy in virtual environment
  pip:
    requirements: /opt/tools/subdomain_enum/CertCrunchy/requirements.txt
    virtualenv: /opt/tools/subdomain_enum/CertCrunchy/venv
  become: yes


	#Aquatone